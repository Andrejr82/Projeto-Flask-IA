worker_processes 1;

events {
    worker_connections 1024;
}

http {
    upstream flask_app {
        server web:5000;  # Garante que o servidor Flask esteja no contêiner com nome 'web' na porta 5000
    }

    server {
        listen 80;

        # Definindo cabeçalhos de proxy para a aplicação Flask
        location / {
            proxy_pass http://flask_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Frame-Options SAMEORIGIN;

            # Cabeçalhos CORS
            add_header 'Access-Control-Allow-Origin' '*';  # Permite todas as origens
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';  # Permite os métodos
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';  # Permite os cabeçalhos

            # Responde à requisição OPTIONS (necessária para CORS)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
                return 204;  # Responde com 204 No Content
            }
        }

        # Garantindo que o erro 403 seja tratado de forma apropriada
        error_page 403 /error_pages/403.html;
        location = /error_pages/403.html {
            internal;
            root /usr/share/nginx/html;
        }
    }
}
